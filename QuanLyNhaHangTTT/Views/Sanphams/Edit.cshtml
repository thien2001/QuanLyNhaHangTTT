@model QuanLyNhaHangTTT.Models.Sanpham

@{
    ViewBag.Title = "Edit";
}

<h4>Chỉnh sửa @Model.Tên_món_ăn</h4>


@using (Html.BeginForm("Edit" , "Sanphams",FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Mã_SP)
    <div class="form-group">
        @Html.LabelFor(model => model.Mã_SP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mã_SP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mã_SP, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mã_loại_SP, "Mã_loại_SP", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Mã_loại_SP", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Mã_loại_SP, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tên_món_ăn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tên_món_ăn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tên_món_ăn, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Số_lượng, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Số_lượng, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Số_lượng, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Giá_tiền, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group ">
                @Html.EditorFor(model => model.Giá_tiền, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-group-addon">vnđ</span>
            </div>
            @Html.ValidationMessageFor(model => model.Giá_tiền, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mô_tả, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Mô_tả, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Mô_tả, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="IMG">Hình ảnh</label>
        <div class="col-md-10">
            <input class="control-label" type="file" name="Picture" id="IMG" onchange="readPicture(this)" accept="image/gif, image/jpeg, image/png" />
        </div>
        <img id="Picture" src="@Url.Action("Picture" , new {Model.Mã_SP })" />
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>

    <script>
  tinymce.init({
      selector: 'textarea#Mô_tả',
    menubar: false
  });

        function readPicture(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('img#Picture')
                        .attr('src', e.target.result)
                       
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>

}
